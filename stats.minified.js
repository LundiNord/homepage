let currentTheme,gridColor,fontColor;function updateTheme(){currentTheme=document.documentElement.getAttribute("data-theme"),gridColor="dark"===currentTheme?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)",fontColor="dark"===currentTheme?"#eee":"#333"}updateTheme();const popup=document.getElementById("popup"),popupToggle=document.querySelector(".popup-toggle");async function getPM25Value(){try{const e=await fetch("https://lupo-cloud.de/air-app/station?id=DEBW080&from=7d-ago&component=luft-pm25"),t=await e.json(),a=t?.PM25HChart?.series?.[0]?.data;return a.map((([e,t])=>({timestamp:new Date(e),value:t})))}catch(e){return console.error("Error fetching PM2.5 data:",e),null}}async function getPM10Value(){try{const e=await fetch("https://lupo-cloud.de/air-app/station?id=DEBW080&from=7d-ago&component=luft-pm10"),t=await e.json(),a=t?.PM10HChart?.series?.[0]?.data;return a.map((([e,t])=>({timestamp:new Date(e),value:t})))}catch(e){return console.error("Error fetching PM10 data:",e),null}}async function displayPM25Value(){try{const e=await getPM25Value(),t=await getPM10Value();if(!e||0===e.length||!t||0===t.length)return void console.error("No data available");const a=e.map((e=>e.timestamp.toLocaleString([],{day:"2-digit",month:"2-digit",hour:"2-digit",minute:"2-digit",hour12:!1}))),o=e.map((e=>e.value)),r=t.map((e=>e.value)),l=document.documentElement.getAttribute("data-theme"),i="dark"===l?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)",n="dark"===l?"#eee":"#333",s=document.getElementById("myChart"),d={type:"line",data:{labels:a,datasets:[{label:"PM2.5 (µg/m³)",data:o,fill:!1,borderColor:"rgb(75, 192, 192)",backgroundColor:"rgba(75, 192, 192, 0.5)",tension:.1,pointRadius:1,pointHoverRadius:5},{label:"PM10 (µg/m³)",data:r,fill:!1,borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.5)",tension:.1,pointRadius:1,pointHoverRadius:5}]},options:{responsive:!0,maintainAspectRatio:!0,plugins:{title:{display:!1,text:"PM2.5 Air Quality Measurements",color:n},legend:{labels:{color:n}},tooltip:{mode:"index",intersect:!1}},scales:{x:{display:!0,title:{display:!0,text:"Time",color:n},grid:{color:i},ticks:{color:n,maxRotation:45,minRotation:0}},y:{display:!0,title:{display:!0,text:"µg/m³",color:n},suggestedMin:0,suggestedMax:1.1*Math.max(...o),grid:{color:i},ticks:{color:n}}}}};window.myChartInstance&&window.myChartInstance.destroy(),window.myChartInstance=new Chart(s,d)}catch(e){console.error("Error displaying PM2.5 data:",e)}}function updateClock(){document.getElementById("clock").innerHTML=(new Date).toLocaleString("de-DE",{timeZone:"Europe/Berlin"}),setTimeout(updateClock,1e3)}async function displayWeather(){try{const e=await fetch("https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m,precipitation&models=icon_seamless&past_days=7&forecast_days=1"),t=await e.json(),a=t.hourly.temperature_2m,o=t.hourly.precipitation,r=t.hourly.time.map((e=>new Date(e).toLocaleString([],{day:"2-digit",month:"2-digit",hour:"2-digit",minute:"2-digit",hour12:!1}))),l=document.getElementById("weatherChart");updateTheme();const i={type:"line",data:{labels:r,datasets:[{label:"Temperature (°C)",data:a,fill:!1,borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.5)",tension:.1,pointRadius:1,pointHoverRadius:5,yAxisID:"y"},{label:"Rain (mm/h)",data:o,fill:!1,borderColor:"rgb(75, 192, 192)",backgroundColor:"rgba(75, 192, 192, 0.5)",tension:.05,pointRadius:1,pointHoverRadius:5,yAxisID:"y1"}]},options:{responsive:!0,maintainAspectRatio:!0,plugins:{legend:{labels:{color:fontColor}},tooltip:{mode:"index",intersect:!1}},scales:{x:{display:!0,title:{display:!0,text:"Time",color:fontColor},grid:{color:gridColor},ticks:{color:fontColor,maxRotation:45,minRotation:0}},y:{display:!0,position:"left",title:{display:!0,text:"°C",color:fontColor},grid:{color:gridColor},ticks:{color:fontColor}},y1:{display:!0,position:"right",title:{display:!0,text:"mm/h",color:fontColor},grid:{drawOnChartArea:!1,color:gridColor},ticks:{color:fontColor}}}}};window.weatherChartInstance&&window.weatherChartInstance.destroy(),window.weatherChartInstance=new Chart(l,i)}catch(e){console.error("Error displaying weather data:",e)}}function updateWeeksLeft(){const e=new Date("2002-07-01T00:00:00Z"),t=(new Date-e)/6048e5;document.getElementById("weeks_left").innerHTML=(4160-t).toFixed(6),document.getElementById("weeks_lived").innerHTML=t.toFixed(6),setTimeout(updateWeeksLeft,1e3)}async function displayCO2(){let e=[{year:2002,value:372.58},{year:2003,value:375.14},{year:2004,value:376.95},{year:2005,value:378.98},{year:2006,value:381.15},{year:2007,value:382.9},{year:2008,value:385.02},{year:2009,value:386.5},{year:2010,value:388.75},{year:2011,value:390.62},{year:2012,value:392.65},{year:2013,value:395.4},{year:2014,value:397.34},{year:2015,value:399.65},{year:2016,value:403.07},{year:2017,value:405.22},{year:2018,value:407.61},{year:2019,value:410.07},{year:2020,value:412.44},{year:2021,value:414.7},{year:2022,value:417.08},{year:2023,value:419.35},{year:2024,value:422.77}],t=[{year:2002,value:9.56},{year:2003,value:9.38},{year:2004,value:8.94},{year:2005,value:8.99},{year:2006,value:9.54},{year:2007,value:9.85},{year:2008,value:9.48},{year:2009,value:9.18},{year:2010,value:7.85},{year:2011,value:9.64},{year:2012,value:9.09},{year:2013,value:8.71},{year:2014,value:10.33},{year:2015,value:9.94},{year:2016,value:9.55},{year:2017,value:9.58},{year:2018,value:10.45},{year:2019,value:10.28},{year:2020,value:10.43},{year:2021,value:9.16},{year:2022,value:10.52},{year:2023,value:10.63},{year:2024,value:10.89}];try{try{const t="https://philippschmitt.github.io/ppm/v1/";for(let a=2025;a<(new Date).getFullYear();a++){const o=await fetch(t+a),r=await o.json();e.push({year:a,value:r.ppm})}const a=await fetch(t+(new Date).getFullYear()+"/"+(new Date).getMonth()),o=await a.json();e.push({year:(new Date).getFullYear(),value:o.ppm})}catch(e){console.error("Error fetching CO2 data:",e)}const a=t.map((e=>e.value)),o=e.map((e=>e.value)),r=e.map((e=>e.year)),l=document.getElementById("co2Chart");updateTheme();const i={type:"line",data:{labels:r,datasets:[{label:"CO2 (ppm)",data:o,fill:!1,borderColor:"rgb(75, 192, 192)",backgroundColor:"rgba(75, 192, 192, 0.5)",tension:.1,pointRadius:1,pointHoverRadius:5,yAxisID:"y"},{label:"Mean Temperature (°C)",data:a,fill:!1,borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.5)",tension:.05,pointRadius:1,pointHoverRadius:5,yAxisID:"y1"}]},options:{responsive:!0,maintainAspectRatio:!0,plugins:{legend:{labels:{color:fontColor}},tooltip:{mode:"index",intersect:!1}},scales:{x:{display:!0,title:{display:!0,text:"Time",color:fontColor},grid:{color:gridColor},ticks:{color:fontColor,maxRotation:45,minRotation:0}},y:{display:!0,position:"left",title:{display:!0,text:"ppm",color:fontColor},grid:{color:gridColor},ticks:{color:fontColor}},y1:{display:!0,position:"right",title:{display:!0,text:"°C",color:fontColor},grid:{drawOnChartArea:!1,color:gridColor},ticks:{color:fontColor}}}}};window.co2ChartInstance&&window.co2ChartInstance.destroy(),window.co2ChartInstance=new Chart(l,i)}catch(e){console.log("Error fetching Climate Change data:",e)}}popupToggle.addEventListener("click",(()=>{popup.style.display=""===popup.style.display||"none"===popup.style.display?"block":"none",umami.track("Showed Data Sources")})),document.addEventListener("click",(e=>{"block"!==popup.style.display||popup.contains(e.target)||popupToggle.contains(e.target)||(popup.style.display="none")})),displayPM25Value(),updateClock(),displayWeather(),updateWeeksLeft(),displayCO2(),document.querySelector(".theme-toggle").addEventListener("click",(()=>{setTimeout((()=>{displayPM25Value(),displayWeather(),displayCO2()}),10)}));