let currentTheme,gridColor,fontColor;function updateTheme(){currentTheme=document.documentElement.getAttribute("data-theme"),gridColor="dark"===currentTheme?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)",fontColor="dark"===currentTheme?"#eee":"#333"}async function getPM25Value(){try{const t=await fetch("https://lupo-cloud.de/air-app/station?id=DEBW080&from=7d-ago&component=luft-pm25"),e=await t.json(),o=e?.PM25HChart?.series?.[0]?.data;return o.map((([t,e])=>({timestamp:new Date(t),value:e})))}catch(t){return console.error("Error fetching PM2.5 data:",t),null}}async function getPM10Value(){try{const t=await fetch("https://lupo-cloud.de/air-app/station?id=DEBW080&from=7d-ago&component=luft-pm10"),e=await t.json(),o=e?.PM10HChart?.series?.[0]?.data;return o.map((([t,e])=>({timestamp:new Date(t),value:e})))}catch(t){return console.error("Error fetching PM10 data:",t),null}}async function displayPM25Value(){try{const t=await getPM25Value(),e=await getPM10Value();if(!t||0===t.length||!e||0===e.length)return void console.error("No data available");const o=t.map((t=>t.timestamp.toLocaleString([],{day:"2-digit",month:"2-digit",hour:"2-digit",minute:"2-digit",hour12:!1}))),a=t.map((t=>t.value)),r=e.map((t=>t.value)),i=document.documentElement.getAttribute("data-theme"),n="dark"===i?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)",l="dark"===i?"#eee":"#333",d=document.getElementById("myChart"),s={type:"line",data:{labels:o,datasets:[{label:"PM2.5 (µg/m³)",data:a,fill:!1,borderColor:"rgb(75, 192, 192)",backgroundColor:"rgba(75, 192, 192, 0.5)",tension:.1,pointRadius:1,pointHoverRadius:5},{label:"PM10 (µg/m³)",data:r,fill:!1,borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.5)",tension:.1,pointRadius:1,pointHoverRadius:5}]},options:{responsive:!0,maintainAspectRatio:!0,plugins:{title:{display:!1,text:"PM2.5 Air Quality Measurements",color:l},legend:{labels:{color:l}},tooltip:{mode:"index",intersect:!1}},scales:{x:{display:!0,title:{display:!0,text:"Time",color:l},grid:{color:n},ticks:{color:l,maxRotation:45,minRotation:0}},y:{display:!0,title:{display:!0,text:"µg/m³",color:l},suggestedMin:0,suggestedMax:1.1*Math.max(...a),grid:{color:n},ticks:{color:l}}}}};window.myChartInstance&&window.myChartInstance.destroy(),window.myChartInstance=new Chart(d,s)}catch(t){console.error("Error displaying PM2.5 data:",t)}}function updateClock(){document.getElementById("clock").innerHTML=(new Date).toLocaleString("de-DE",{timeZone:"Europe/Berlin"}),setTimeout(updateClock,1e3)}async function displayWeather(){try{const t=await fetch("https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m,precipitation&models=icon_seamless&past_days=7&forecast_days=1"),e=await t.json(),o=e.hourly.temperature_2m,a=e.hourly.precipitation,r=e.hourly.time.map((t=>new Date(t).toLocaleString([],{day:"2-digit",month:"2-digit",hour:"2-digit",minute:"2-digit",hour12:!1}))),i=document.getElementById("weatherChart");updateTheme();const n={type:"line",data:{labels:r,datasets:[{label:"Temperature (°C)",data:o,fill:!1,borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.5)",tension:.1,pointRadius:1,pointHoverRadius:5,yAxisID:"y"},{label:"Rain (mm/h)",data:a,fill:!1,borderColor:"rgb(75, 192, 192)",backgroundColor:"rgba(75, 192, 192, 0.5)",tension:.05,pointRadius:1,pointHoverRadius:5,yAxisID:"y1"}]},options:{responsive:!0,maintainAspectRatio:!0,plugins:{legend:{labels:{color:fontColor}},tooltip:{mode:"index",intersect:!1}},scales:{x:{display:!0,title:{display:!0,text:"Time",color:fontColor},grid:{color:gridColor},ticks:{color:fontColor,maxRotation:45,minRotation:0}},y:{display:!0,position:"left",title:{display:!0,text:"°C",color:fontColor},grid:{color:gridColor},ticks:{color:fontColor}},y1:{display:!0,position:"right",title:{display:!0,text:"mm/h",color:fontColor},grid:{drawOnChartArea:!1,color:gridColor},ticks:{color:fontColor}}}}};window.weatherChartInstance&&window.weatherChartInstance.destroy(),window.weatherChartInstance=new Chart(i,n)}catch(t){console.error("Error displaying weather data:",t)}}function updateWeeksLeft(){const t=new Date("2002-07-01T00:00:00Z"),e=(new Date-t)/6048e5;document.getElementById("weeks_left").innerHTML=(4160-e).toFixed(6),document.getElementById("weeks_lived").innerHTML=e.toFixed(6),setTimeout(updateWeeksLeft,1e3)}updateTheme(),displayPM25Value(),updateClock(),displayWeather(),updateWeeksLeft(),document.querySelector(".theme-toggle").addEventListener("click",(()=>{setTimeout((()=>{displayPM25Value(),displayWeather()}),10)}));