import{getStandardLeafletMap}from"./hiking.minified.js";const bigMap=getStandardLeafletMap("big-map");function addMarker(e){new L.marker(e).addTo(bigMap)}bigMap.setView([50,10],3),L.control.locate().addTo(bigMap);let curentLocation=null;bigMap.on("locationfound",(function(e){curentLocation=e.latlng,umami.track("Location found",{user_location:e.latlng})}));const search=document.getElementById("map-search");search.addEventListener("keyup",(function(){const e=search.value;doLocationSearch(e,0),umami.track("Location Search",{search_data:e})}));const searchResults=document.getElementById("map-search-results");search.addEventListener("blur",(function(e){e.relatedTarget&&"DIV"===e.relatedTarget.nodeName||(searchResults.style.display="none")})),search.addEventListener("focus",(function(){""!==searchResults.innerHTML&&(searchResults.style.display="block")}));const searchApiUrl="https://api.mapbox.com/search/geocode/v6/forward",mapboxToken="pk.eyJ1Ijoibnl4bm9yZCIsImEiOiJjbTdkZDZoeGswMXpkMmlzYjZzYnNuMGthIn0.bHJF97xa3uu3Vr4xj4tgWQ";async function doLocationSearch(e,t){if(e.length<2){let e=1===t?routeStartResults:2===t?routeEndResults:searchResults;return e.innerHTML="",void(e.style.display="none")}fetch(`${searchApiUrl}?q=${e}&proximity=ip&autocomplete=true&access_token=${mapboxToken}`).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{1===t||2===t?showRoutePointSearch(e,t):showSearchResults(e)})).catch((e=>{console.error("Error:",e)}))}function showSearchResults(e){searchResults.innerHTML="",searchResults.style.display="block",e.features.forEach((e=>{const t=document.createElement("div");t.tabIndex=0,t.textContent=e.properties.name+", "+e.properties.full_address,t.textContent=t.textContent+"\n",t.style.cursor="pointer",t.addEventListener("click",(()=>{const t=e.geometry.coordinates;bigMap.setView([t[1],t[0]],15),addMarker([t[1],t[0]]),searchResults.style.display="none"})),searchResults.appendChild(t);const n=document.createElement("div");n.innerHTML="------------",searchResults.appendChild(n)})),searchResults.removeChild(searchResults.lastChild)}let startCoords=null,endCoords=null;const routeStart=document.getElementById("route-start-search");routeStart.addEventListener("keyup",(function(){const e=routeStart.value;doLocationSearch(e,1),umami.track("Route Start Search",{search_data:e})}));const routeStartResults=document.getElementById("route-start-results");routeStart.addEventListener("blur",(function(e){e.relatedTarget&&"DIV"===e.relatedTarget.nodeName||(routeStartResults.style.display="none")})),routeStart.addEventListener("focus",(function(){""!==routeStartResults.innerHTML&&(routeStartResults.style.display="block")}));const routeEnd=document.getElementById("route-end-search");routeEnd.addEventListener("keyup",(function(){const e=routeEnd.value;doLocationSearch(e,2),umami.track("Route End Search",{search_data:e})}));const routeEndResults=document.getElementById("route-end-results");routeEnd.addEventListener("blur",(function(e){e.relatedTarget&&"DIV"===e.relatedTarget.nodeName||(routeEndResults.style.display="none")})),routeEnd.addEventListener("focus",(function(){""!==routeEndResults.innerHTML&&(routeEndResults.style.display="block")}));const calcRouteButton=document.getElementById("route-button");function showRoutePointSearch(e,t){let n=1===t?routeStartResults:routeEndResults;n.innerHTML="",n.style.display="block",e.features.forEach((e=>{const o=document.createElement("div");o.tabIndex=0,o.textContent=e.properties.name+", "+e.properties.full_address,o.textContent=o.textContent+"\n",o.style.cursor="pointer",o.addEventListener("click",(()=>{n.style.display="none";const o=e.geometry.coordinates;addMarker([o[1],o[0]]),n.innerHTML="",n.style.display="none",1===t?(startCoords=o,routeStart.value=e.properties.name):(endCoords=o,routeEnd.value=e.properties.name)})),n.appendChild(o);const r=document.createElement("div");r.innerHTML="------------",n.appendChild(r)})),n.removeChild(n.lastChild)}function calcRoute(){if(null==startCoords||null==endCoords)return;let e=`https://api.mapbox.com/directions/v5/mapbox/walking/${startCoords[0]},${startCoords[1]};${endCoords[0]},${endCoords[1]}?alternatives=false&geometries=geojson&language=en&overview=simplified&steps=true&access_token=${mapboxToken}`;fetch(e).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{showRoute(e)})).catch((e=>{console.error("Error:",e)})),umami.track("Route Calculated")}function showRoute(e){document.getElementById("route-info").style.display="block";let t=L.geoJSON(e.routes[0].geometry).addTo(bigMap);bigMap.fitBounds(t.getBounds());document.getElementById("route-stats").innerHTML="Duration: "+Math.round(e.routes[0].duration/60)+" min\n Distance: "+Math.round(e.routes[0].distance/1e3)+" km";const n=document.getElementById("route-instructions"),o=e.routes[0].legs[0].steps;let r="";for(const e of o)r+=`<li>${e.maneuver.instruction} for ${Math.round(e.distance/1e3*10)/10} km</li>`;n.innerHTML=`<ol>${r}</ol>`}calcRouteButton.addEventListener("click",calcRoute);